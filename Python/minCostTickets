class Solution(object):
    def mincostTickets(self, days, costs):
        """
        :type days: List[int]
        :type costs: List[int]
        :rtype: int
        """
        if not days: return 0
        days.insert(0,0)
        length = len(days)
        dp = [-1]*(length)
        dp[0] = 0
        for i in range(1,length):
            if dp[i]==-1 or (dp[i-1]+costs[0])<dp[i]: dp[i]=dp[i-1]+costs[0]
            j = i
            while (j<length and days[j]<days[i]+7):
                if dp[j]==-1 or (dp[i-1]+costs[1]<dp[j]): dp[j]=dp[i-1]+costs[1]
                j += 1
            j = i
            while (j<length and days[j]<days[i]+30):
                if dp[j]==-1 or (dp[i-1]+costs[2]<dp[j]): dp[j]=dp[i-1]+costs[2]
                j += 1
        return dp[-1]